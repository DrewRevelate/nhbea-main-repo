"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2587],{72587:(e,t,a)=>{a.d(t,{MK:()=>n});var r=a(56104),o=a(35317),i=a(45404);let d=null,l={async getAllActiveAwards(){try{if(d&&Date.now()-d.timestamp<6e4)return d.data;let e=(0,o.collection)(r.db,"awards"),t=(0,o.P)(e,(0,o._M)("isActive","==",!0),(0,o.My)("category"),(0,o.My)("name")),a=await (0,o.GG)(t),i=[];return a.forEach(e=>{var t,a,r;let o=e.data();i.push({id:e.id,name:o.name,icon:o.icon,description:o.description,eligibility:o.eligibility,deadline:(null==(t=o.deadline)?void 0:t.toDate())||new Date,category:o.category,isActive:o.isActive,createdAt:(null==(a=o.createdAt)?void 0:a.toDate())||new Date,updatedAt:(null==(r=o.updatedAt)?void 0:r.toDate())||new Date})}),d={data:i,timestamp:Date.now()},i}catch(e){throw console.error("Error fetching awards:",e),Error("Failed to fetch awards data")}},async getAwardById(e){try{var t,a,i;let d=(0,o.doc)(r.db,"awards",e),l=await (0,o.x7)(d);if(!l.exists())return null;let n=l.data();return{id:l.id,name:n.name,icon:n.icon,description:n.description,eligibility:n.eligibility,deadline:(null==(t=n.deadline)?void 0:t.toDate())||new Date,category:n.category,isActive:n.isActive,createdAt:(null==(a=n.createdAt)?void 0:a.toDate())||new Date,updatedAt:(null==(i=n.updatedAt)?void 0:i.toDate())||new Date}}catch(e){throw console.error("Error fetching award:",e),Error("Failed to fetch award data")}},async getAllAwards(){try{let e,t=(0,o.collection)(r.db,"awards");try{let a=(0,o.P)(t,(0,o.My)("category"),(0,o.My)("name"));e=await (0,o.GG)(a)}catch(a){console.log("Ordered query failed, trying simple query:",a),e=await (0,o.GG)(t)}let a=[];return e.forEach(e=>{var t,r,o,i,d;let l=e.data();if(!l.name||!l.category)return void console.warn("Award document ".concat(e.id," missing required fields:"),l);a.push({id:e.id,name:l.name||"",icon:l.icon||"",description:l.description||"",eligibility:l.eligibility||"",deadline:(null==(t=l.deadline)?void 0:t.toDate())||new Date,category:l.category||"Excellence",isActive:null==(d=null!=(i=l.isActive)?i:l.isactive)||d,createdAt:(null==(r=l.createdAt)?void 0:r.toDate())||new Date,updatedAt:(null==(o=l.updatedAt)?void 0:o.toDate())||new Date})}),a.sort((e,t)=>e.category!==t.category?e.category.localeCompare(t.category):e.name.localeCompare(t.name)),console.log("Fetched ".concat(a.length," awards from Firestore")),a}catch(e){return console.error("Error fetching all awards:",e),[]}},async getAwardsByCategory(e){try{return(await this.getAllActiveAwards()).filter(t=>t.category===e)}catch(e){throw console.error("Error fetching awards by category:",e),Error("Failed to fetch awards by category")}}},n={async createAward(e){var t,a;try{if(!(0,i.xI)().currentUser)throw Error("Authentication required. Please log in to create awards.");let a=new Date,l={...e,createdAt:a,updatedAt:a,isActive:null==(t=e.isActive)||t};d=null;let n=await (0,o.addDoc)((0,o.collection)(r.db,"awards"),l);return console.log("Award created with ID:",n.id),n.id}catch(e){if(console.error("Error creating award:",e),"permission-denied"===e.code)throw Error("Permission denied. Please ensure you are logged in as an administrator.");if(null==(a=e.message)?void 0:a.includes("Authentication required"))throw Error(e.message);throw Error("Failed to create award: ".concat(e.message||"Unknown error"))}},async updateAward(e,t){try{if(!(0,i.xI)().currentUser)throw Error("Authentication required. Please log in to update awards.");let a={...t,updatedAt:new Date};d=null;let l=(0,o.doc)(r.db,"awards",e);await (0,o.updateDoc)(l,a),console.log("Award updated:",e)}catch(e){var a;if(console.error("Error updating award:",e),"permission-denied"===e.code)throw Error("Permission denied. Please ensure you are logged in as an administrator.");if(null==(a=e.message)?void 0:a.includes("Authentication required"))throw Error(e.message);throw Error("Failed to update award: ".concat(e.message||"Unknown error"))}},async deleteAward(e){try{d=null;let t=(0,o.doc)(r.db,"awards",e);await (0,o.updateDoc)(t,{isActive:!1,updatedAt:new Date}),console.log("Award soft deleted:",e)}catch(e){throw console.error("Error deleting award:",e),Error("Failed to delete award")}},async hardDeleteAward(e){try{d=null;let t=(0,o.doc)(r.db,"awards",e);await (0,o.kd)(t),console.log("Award permanently deleted:",e)}catch(e){throw console.error("Error permanently deleting award:",e),Error("Failed to permanently delete award")}},async toggleAwardStatus(e){try{let t=await l.getAwardById(e);if(!t)throw Error("Award not found");await this.updateAward(e,{isActive:!t.isActive}),console.log("Award status toggled:",e,"Active:",!t.isActive)}catch(e){throw console.error("Error toggling award status:",e),Error("Failed to toggle award status")}},subscribeToAwards(e){let t=(0,o.collection)(r.db,"awards"),a=(0,o.P)(t,(0,o.My)("category"),(0,o.My)("name"));return(0,o.aQ)(a,t=>{let a=[];t.forEach(e=>{var t,r,o,i;let d=e.data();a.push({id:e.id,name:d.name||"",icon:d.icon||"",description:d.description||"",eligibility:d.eligibility||"",deadline:(null==(t=d.deadline)?void 0:t.toDate())||new Date,category:d.category||"Excellence",isActive:null==(i=d.isActive)||i,createdAt:(null==(r=d.createdAt)?void 0:r.toDate())||new Date,updatedAt:(null==(o=d.updatedAt)?void 0:o.toDate())||new Date})}),d=null,e(a)},e=>{console.error("Error in awards subscription:",e)})},subscribeToActiveAwards(e){let t=(0,o.collection)(r.db,"awards"),a=(0,o.P)(t,(0,o._M)("isActive","==",!0),(0,o.My)("category"),(0,o.My)("name"));return(0,o.aQ)(a,t=>{let a=[];t.forEach(e=>{var t,r,o,i;let d=e.data();a.push({id:e.id,name:d.name||"",icon:d.icon||"",description:d.description||"",eligibility:d.eligibility||"",deadline:(null==(t=d.deadline)?void 0:t.toDate())||new Date,category:d.category||"Excellence",isActive:null==(i=d.isActive)||i,createdAt:(null==(r=d.createdAt)?void 0:r.toDate())||new Date,updatedAt:(null==(o=d.updatedAt)?void 0:o.toDate())||new Date})}),d=null,e(a)},e=>{console.error("Error in active awards subscription:",e)})},async batchUpdateAwards(e){try{let t=e.map(e=>{let{id:t,data:a}=e;return this.updateAward(t,a)});await Promise.all(t),console.log("Batch award updates completed")}catch(e){throw console.error("Error in batch award updates:",e),Error("Failed to update multiple awards")}}}}}]);