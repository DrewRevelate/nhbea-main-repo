name: Brand Validation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run brand validation weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  brand-validation:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: nhbea/package-lock.json
        
    - name: Install dependencies
      run: |
        cd nhbea
        npm ci
        
    - name: Run lint checks
      run: |
        cd nhbea
        npm run lint
        
    - name: Run unit tests
      run: |
        cd nhbea
        npm test
        
    - name: Run brand consistency validation
      run: |
        cd nhbea
        npm run brand:validate
        
    - name: Run accessibility compliance tests
      run: |
        cd nhbea
        npm run brand:accessibility-check
        
    - name: Build application
      run: |
        cd nhbea
        npm run build
        
    - name: Run performance testing with brand validation
      run: |
        cd nhbea
        npm run brand:performance-test
        
    - name: Run visual regression tests
      run: |
        cd nhbea
        npm run brand:visual-regression
        
    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        file: nhbea/coverage/lcov.info
        flags: brand-validation
        name: codecov-brand-validation
        
    - name: Upload brand validation report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: brand-validation-report-${{ matrix.node-version }}
        path: |
          nhbea/brand-validation-report.json
          nhbea/performance-report.json
          nhbea/accessibility-report.json
          nhbea/visual-regression-report/
        retention-days: 30
        
    - name: Comment PR with brand validation results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'nhbea/brand-validation-report.json';
          
          if (fs.existsSync(path)) {
            const report = JSON.parse(fs.readFileSync(path, 'utf8'));
            const comment = `
            ## Brand Validation Report üé®
            
            **Overall Status**: ${report.overall.status === 'pass' ? '‚úÖ PASSED' : '‚ùå FAILED'}
            
            ### Results Summary
            - **Brand Consistency**: ${report.brandConsistency.violations} violations found
            - **Performance Impact**: ${report.performance.status === 'pass' ? '‚úÖ' : '‚ùå'} (${report.performance.score}/100)
            - **Accessibility**: ${report.accessibility.violations} WCAG violations
            - **Visual Regression**: ${report.visualRegression.changedComponents} components changed
            
            ### Key Metrics
            - **Color Usage Compliance**: ${report.brandConsistency.colorCompliance}%
            - **Design Token Usage**: ${report.brandConsistency.tokenCompliance}%
            - **Core Web Vitals**: LCP ${report.performance.lcp}s, FCP ${report.performance.fcp}s, CLS ${report.performance.cls}
            
            ${report.overall.status === 'fail' ? '‚ö†Ô∏è **Action Required**: Brand validation failures detected. Please review and fix before merging.' : 'üéâ **Great Job**: All brand validation tests passed!'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  cross-browser-testing:
    runs-on: ubuntu-latest
    needs: brand-validation
    
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: nhbea/package-lock.json
        
    - name: Install dependencies
      run: |
        cd nhbea
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd nhbea
        npx playwright install ${{ matrix.browser }}
        
    - name: Build application
      run: |
        cd nhbea
        npm run build
        
    - name: Start development server
      run: |
        cd nhbea
        npm start &
        sleep 10
        
    - name: Run cross-browser brand validation tests
      run: |
        cd nhbea
        npm run brand:cross-browser-test -- --browser=${{ matrix.browser }}
        
    - name: Upload browser-specific results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: brand-validation-${{ matrix.browser }}
        path: nhbea/test-results/${{ matrix.browser }}/
        retention-days: 7

  lighthouse-performance:
    runs-on: ubuntu-latest
    needs: brand-validation
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: nhbea/package-lock.json
        
    - name: Install dependencies
      run: |
        cd nhbea
        npm ci
        
    - name: Build application
      run: |
        cd nhbea
        npm run build
        
    - name: Start server for Lighthouse testing
      run: |
        cd nhbea
        npm start &
        sleep 15
        
    - name: Run Lighthouse CI with brand performance validation
      run: |
        cd nhbea
        npm install -g @lhci/cli
        lhci autorun --config=.lighthouserc.json
        
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: nhbea/.lighttmp/
        retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: nhbea/package-lock.json
        
    - name: Install dependencies
      run: |
        cd nhbea 
        npm ci
        
    - name: Run npm audit
      run: |
        cd nhbea
        npm audit --audit-level=moderate
        
    - name: Run brand CSS security validation
      run: |
        cd nhbea
        npm run brand:security-scan